{% if env['SENTRY_DSN'] %}
log4j.rootLogger={{ env["CONNECT_LOG4J_ROOT_LOGLEVEL"] | default('INFO') }}, stdout, SentryAppender
{% else %}
log4j.rootLogger={{ env["CONNECT_LOG4J_ROOT_LOGLEVEL"] | default('INFO') }}, stdout
{% endif %}

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

{% if env['CONNECT_LOG4J_LOGGERS'] %}
{% set loggers = parse_log4j_loggers(env['CONNECT_LOG4J_LOGGERS']) %}
{% for logger,loglevel in loggers.iteritems() %}
log4j.logger.{{logger}}={{loglevel}}, stdout
{% endfor %}
{% endif %}

{% if env['SENTRY_DSN'] %}
log4j.appender.SentryAppender=com.getsentry.raven.log4j.SentryAppender
log4j.appender.SentryAppender.threshold={{ env['SENTRY_LOG_LEVEL'] | default('WARN') }}
log4j.appender.SentryAppender.dsn={{ env["SENTRY_DSN"] }}
log4j.appender.SentryAppender.tags={{ env["SENTRY_TAGS"] }}
log4j.appender.SentryAppender.ravenFactory={{ env["SENTRY_RAVEN_FACTORY"] | default('com.getsentry.raven.DefaultRavenFactory') }}
{% endif %}
